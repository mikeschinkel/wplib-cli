#!/usr/bin/env bash
# ---------------------------------------------------------------------------
# wplib - WPLib Command Line Interface tool

# Copyright 2016,  <mikeschinkel@Mikes-MacBook-Pro.local>
  
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License at <http://www.gnu.org/licenses/> for
# more details.

# Usage: wplib [-h|--help] [-a|--Add Thing foo] [-d|--Delete Thing bar]

# Revision history:
# 2016-03-28 Created by generate-script ver. 3.3
# ---------------------------------------------------------------------------

PROGNAME=${0##*/}
VERSION="0.1"

init_project() {  #Initializing WPLib-based WordPress website project

  mkdir -p www
  mkdir -p docs
  mkdir -p sql


}

clean_up() { # Perform pre-exit housekeeping
  return
}

error_exit() {
  echo -e "${PROGNAME}: ${1:-"Unknown Error"}" >&2
  clean_up
  exit 1
}

graceful_exit() {
  clean_up
  exit
}

signal_exit() { # Handle trapped signals
  case $1 in
    INT)
      error_exit "Program interrupted by user" ;;
    TERM)
      echo -e "\n$PROGNAME: Program terminated" >&2
      graceful_exit ;;
    *)
      error_exit "$PROGNAME: Terminating on unknown signal" ;;
  esac
}

usage() {
  echo -e "Usage: $PROGNAME command [-h|--help] [-a|--add-thing foo]"
}

help_message() {
  cat <<- _EOF_

  WPLib Command Line Interface
  Version $VERSION

  $(usage)

  Command:

    init - Initialize a new WPLib-based WordPress website project

  Options:

    -h, --help  Display this help message and exit.
    -a, --add-thing foo  Add
      Where 'foo' is the Description of Foo.

_EOF_
  return
}

# Trap signals
trap "signal_exit TERM" TERM HUP
trap "signal_exit INT"  INT



# Parse command-line
while [[ -n $1 ]]; do
  case $1 in
    -h | --help)
      help_message; graceful_exit 
      ;;

    -a | --add-thing)
      echo "Add"; shift; foo="$1" 
      ;;

    init)
      echo "Initializing WPLib-based WordPress website project." 
      init_project
      ;;

    -* | --*)
      usage
      error_exit "Unknown option $1" ;;
    *)
      echo "Argument $1 to process..." ;;
  esac
  shift
done

# Main logic

graceful_exit

