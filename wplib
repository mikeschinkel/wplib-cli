#!/usr/bin/env bash
# ---------------------------------------------------------------------------
# wplib - WPLib Command Line Interface tool

# Copyright 2016,  <mikeschinkel@gmail.com>
  
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License at <http://www.gnu.org/licenses/> for
# more details.

# Usage: wplib [-h|--help] [-a|--Add Thing foo] [-d|--Delete Thing bar]

# Revision history:
# 2016-03-28 Created by generate-script ver. 3.3
# ---------------------------------------------------------------------------

script_dir=$(dirname "$BASH_SOURCE")
php_bin=$(which php)

PROGNAME=${0##*/}
VERSION="0.1"

project_slug=""
app_slug=""

set_config_var() {
    if [ "" == "$1" ]; then
        echo
        echo "No config var specified."
        echo
        echo "   Usage: ${PROGNAME} set <config_var>=<config_value>"
        echo
        exit
    fi
    config_var="$1"

    if [ "" == "$2" ]; then
        echo
        echo "No config value specified."
        echo
        echo "   Usage: ${PROGNAME} set <config_var>=<config_value>"
        echo
        exit
    fi
    config_value="$2"

    $php_bin "${script_dir}/inc/set-config-var.php" "${config_var}" "${config_value}"

}
init_project() {  #Initializing WPLib-based WordPress website project

    if [ "" == "$1" ]; then
        echo
        echo "No project name specified."
        echo
        echo "   Usage: ${PROGNAME} init <project_slug>"
        echo
        exit
    fi
    project_slug="$1"

    if [ "" == "$2" ]; then
        app_slug="${project_slug}"
    else
        app_slug="$2"
    fi

    echo
    echo "Initializing [${project_slug}] project..."

    mkdir -p "${project_slug}/composer"
    mkdir -p "${project_slug}/composer/scripts"
    cp "${script_dir}/files/sanitize-wp.php" "${project_slug}/composer/scripts"

    mkdir -p "${project_slug}/www"
    mkdir -p "${project_slug}/www/content"
    mkdir -p "${project_slug}/www/content/mu-plugins"
    mkdir -p "${project_slug}/www/content/mu-plugins/${app_slug}"
    mkdir -p "${project_slug}/www/wp"
    mkdir -p "${project_slug}/docs"
    mkdir -p "${project_slug}/sql"

    echo
    echo "Done."


}

clean_up() { # Perform pre-exit housekeeping
  return
}

error_exit() {
  echo -e "${PROGNAME}: ${1:-"Unknown Error"}" >&2
  clean_up
  exit 1
}

graceful_exit() {
  clean_up
  exit
}

signal_exit() { # Handle trapped signals
  case $1 in
    INT)
      error_exit "Program interrupted by user" ;;
    TERM)
      echo -e "\n$PROGNAME: Program terminated" >&2
      graceful_exit ;;
    *)
      error_exit "$PROGNAME: Terminating on unknown signal" ;;
  esac
}

usage() {
  echo -e "Usage: $PROGNAME command [-h|--help] [-a|--add-thing foo]"
}

help_message() {
  cat <<- _EOF_

  WPLib Command Line Interface
  Version $VERSION

  $(usage)

  Command:

    set <var>=<value>   - Initialize a configuration variable
    init <project_slug> - Initialize a new WPLib-based WordPress website project

  Options:

    -h, --help  Display this help message and exit.
    -a, --app=<app_slug> Explicitly specify the app slug.

_EOF_
  return
}

# Trap signals
trap "signal_exit TERM" TERM HUP
trap "signal_exit INT"  INT


for arg in "$@"
do
  case "${arg}" in
    -h | --help)
      help_message
      graceful_exit
      ;;
    set)
      action="set"
      shift
      pair=(${1//=/ })
      ;;
    init)
      action="init"
      shift
      project_slug="$1"
      ;;
    -a=*| --app-name=*)
      app_slug="${arg#*=}"
      ;;
  esac
  shift
done

# Main logic
case "${action}" in
    set)
        set_config_var "${pair[0]}" "${pair[1]}"
        ;;

    init)
        init_project "${project_slug}" "${app_slug}"
        ;;

    -* | --*)
      usage
      error_exit "Unknown option $1" ;;

    *)
      echo "Argument $1 to process..." ;;

esac


graceful_exit

